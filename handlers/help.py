from aiogram import Router, types
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder

help_router = Router()

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å–ø—Ä–∞–≤–∫–∏
HELP_MAIN_TEXT = """
ü§ñ <b>–Ø ‚Äî —Ç–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫</b>  

–Ø —É–º–µ—é:
- –ü–æ–¥—Å–∫–∞–∑—ã–≤–∞—Ç—å –ø–æ–≥–æ–¥—É üå¶  
- –ü–æ–º–æ–≥–∞—Ç—å –≤ —É—á–µ–±–µ üìö  
- –†–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ò–ò üß†  
- –ù–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –¥–µ–ª–∞—Ö –∏ –±—ã—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–º ‚è∞  
- –î–∞–≤–∞—Ç—å –ø–æ–ª–µ–∑–Ω—ã–µ —Å–æ–≤–µ—Ç—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å üåü  

–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é –Ω–∏–∂–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏.
"""

# –ü–æ–¥—Ä–æ–±–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π
HELP_DETAILS = {
    "weather": """
üå¶ <b>–§—É–Ω–∫—Ü–∏—è: –ü–æ–≥–æ–¥–∞</b>  

–ö–æ–º–∞–Ω–¥—ã:
/now ‚Äî –ø–æ–≥–æ–¥–∞ —Å–µ–π—á–∞—Å  
/tomorrow ‚Äî –ø–æ–≥–æ–¥–∞ –Ω–∞ –∑–∞–≤—Ç—Ä–∞  
/hourly ‚Äî –ø–æ—á–∞—Å–æ–≤–æ–π –ø—Ä–æ–≥–Ω–æ–∑  

–Ø –±–µ—Ä—É –¥–∞–Ω–Ω—ã–µ —Å OpenWeather API –∏ –ø–æ–¥—Å–∫–∞–∑—ã–≤–∞—é –ø–æ–≥–æ–¥—É –≤ —Ç–≤–æ–µ–º –≥–æ—Ä–æ–¥–µ.
""",
    "ai": """
üß† <b>–§—É–Ω–∫—Ü–∏—è: –í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ò–ò</b>  

–Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–º–æ–≥–∞—Ç—å —Å —É—á–µ–±–æ–π, –æ–±—ä—è—Å–Ω—è—Ç—å —Å–ª–æ–∂–Ω—ã–µ —Ç–µ–º—ã –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏ –∏ –¥–∞–∂–µ –ø–æ–º–æ–≥–∞—Ç—å —Å –∫–æ–¥–æ–º.  

‚ö° –ü–ª–∞–Ω–∏—Ä—É–µ—Ç—Å—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å ChatGPT –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø–æ–ª—å–∑—ã.
""",
    "planner": """
üìÖ <b>–§—É–Ω–∫—Ü–∏—è: –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫</b>  

–Ø –º–æ–≥—É –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –æ –¥–µ–ª–∞—Ö, –ø–æ–º–æ–≥–∞—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–µ–Ω—å –∏ –º–æ—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å.  

(–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ: –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∑–∞–¥–∞—á–∏, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è, —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è)
"""
}


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
def main_menu_keyboard() -> types.InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.button(text="üå¶ –ü–æ–≥–æ–¥–∞", callback_data="help_weather")
    builder.button(text="üß† –ò–ò", callback_data="help_ai")
    builder.button(text="üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫", callback_data="help_planner")
    builder.adjust(1)  # –ø–æ –æ–¥–Ω–æ–º—É –≤ —Å—Ç—Ä–æ–∫–µ
    return builder.as_markup()


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤–æ–∑–≤—Ä–∞—Ç–∞
def back_keyboard() -> types.InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.button(text="‚¨Ö –ù–∞–∑–∞–¥", callback_data="help_back")
    return builder.as_markup()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
@help_router.message(Command("help"))
async def cmd_help(message: types.Message):
    await message.answer(
        HELP_MAIN_TEXT,
        reply_markup=main_menu_keyboard(),
        parse_mode="HTML"
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ inline-–∫–Ω–æ–ø–æ–∫
@help_router.callback_query(lambda c: c.data.startswith("help_"))
async def process_help_callback(callback: types.CallbackQuery):
    action = callback.data.split("_")[1]

    if action == "back":
        # –í–µ—Ä–Ω—É—Ç—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await callback.message.edit_text(
            HELP_MAIN_TEXT,
            reply_markup=main_menu_keyboard(),
            parse_mode="HTML"
        )
    else:
        # –ü–æ–∫–∞–∑–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ –≤—ã–±—Ä–∞–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
        text = HELP_DETAILS.get(action, "‚ùå –û–ø–∏—Å–∞–Ω–∏–µ –ø–æ–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.")
        await callback.message.edit_text(
            text,
            reply_markup=back_keyboard(),
            parse_mode="HTML"
        )

    await callback.answer()  # –∑–∞–∫—Ä—ã–≤–∞–µ—Ç "—á–∞—Å–∏–∫–∏" –Ω–∞ –∫–Ω–æ–ø–∫–µ
